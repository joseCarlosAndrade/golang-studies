package game

import "fmt"


/* 
# Game type 

Main game type generated by 
	game.NewGame() 

function. */
type Game struct {
	board *board
	currentPlayer Player
	state State
}

/* Returns a Game type to handle a match */ 
func NewGame() Game {
	return Game{newBoard(), PLAYER1, GOING}
}

/* Plays a piece of the current player and then changes the player */
func (g* Game) Play(pos int) (State, error) {
	// fmt.Printf("Playing with player: %c \n", g.currentPlayer)
	err := g.board.Play(g.currentPlayer, pos)
	if err != nil {
		return g.state, err
	}

	// do logic (change game state, swap player and stuff)
	if g.board.CheckGame() {
		if g.currentPlayer == PLAYER1 {
			g.state = VICTORY1
		} else {
			g.state = VICTORY2
		}
		return g.state, err
	}

	// switching players
	if g.currentPlayer == PLAYER1 {
		g.currentPlayer = PLAYER2
	} else {
		g.currentPlayer = PLAYER1
	}


	return g.state, err
}

/* Prints the board on a formatted way */
func (g Game) ShowBoard() {
	fmt.Println(g.board)
}